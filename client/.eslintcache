[{"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/App.js":"1","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetUpdate.jsx":"2","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetForm.jsx":"3","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/reportWebVitals.js":"4","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/index.js":"5","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetList.jsx":"6","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetDisplay.jsx":"7","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/views/Main.jsx":"8"},{"size":786,"mtime":1611877833371,"results":"9","hashOfConfig":"10"},{"size":3461,"mtime":1611880054631,"results":"11","hashOfConfig":"10"},{"size":2902,"mtime":1611873644676,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1611870323064,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1611870323063,"results":"14","hashOfConfig":"10"},{"size":1515,"mtime":1611872804148,"results":"15","hashOfConfig":"10"},{"size":3536,"mtime":1611881879163,"results":"16","hashOfConfig":"10"},{"size":793,"mtime":1611871456998,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zw5uqt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/App.js",["39"],"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetUpdate.jsx",["40","41"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router';\n\nconst PetUpdate = props => {\n    const [info, setInfo] = useState(\"\");\n    const { id } = props;\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [likes, setLikes] = useState(0);\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\n            .then(res => {\n                setInfo(res.data.pet[0])\n                setName(res.data.pet[0].name);\n                setType(res.data.pet[0].type);\n                setDescription(res.data.pet[0].description);\n                setSkillOne(res.data.pet[0].skillOne);\n                setSkillTwo(res.data.pet[0].skillTwo);\n                setSkillThree(res.data.pet[0].skillThree);\n                setLikes(res.data.pet[0].likes);\n            })\n    },[])\n    const updateProduct = e => {\n        e.preventDefault();\n        axios.put('http://localhost:8000/api/pets/' + id, {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree,\n            likes\n        })\n            .then(res => console.log(res));\n        navigate(\"/\")\n    }\n    return (\n        <div className=\"body\">\n            <div className=\"header\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">back to home</Link>\n            </div>\n            <div className=\"content\">\n                <h2>Edit {name}</h2>\n            </div>\n            <form className=\"box\" onSubmit={updateProduct}>\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <p>\n                            <label>Pet Name: </label> <br/>\n                            <input type=\"text\" onChange={e => setName(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Pet Type: </label> <br/>\n                            <input type=\"text\" onChange={e => setType(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Pet Description: </label> <br/>\n                            <input type=\"text\" onChange={e => setDescription(e.target.value)} />\n                        </p>\n                        <input type=\"submit\" value=\"Update Pet\" />\n                    </div>\n                    <div className=\"column\">\n                        <p>Skills (optional):</p>\n                        <p>\n                            <label>Skill 1: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillOne(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Skill 2: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillTwo(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Skill 3: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillThree(e.target.value)} />\n                        </p>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PetUpdate;\n","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetForm.jsx",["42"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst PetForm = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n\n    const changeHandler = e => {\n\n    }\n    const submitHandler = e => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/pets', {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree\n        })\n            .then(res => console.log(\"Response: \", res))\n            .catch(err => console.log(\"Error\", err));\n        navigate(\"http://localhost:3000\");\n    }\n\n    return (\n        <div className=\"body\">\n            <div className=\"header\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">back to home</Link>\n            </div>\n            <div className=\"content\">\n                <h2>Know a pet needing a home?</h2>\n            </div>\n            <form className=\"box\" onSubmit={submitHandler}>\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <p>\n                            <label>Pet Name: </label> <br/>\n                            <input type=\"text\" onChange={e => setName(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Pet Type: </label> <br/>\n                            <input type=\"text\" onChange={e => setType(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Pet Description: </label> <br/>\n                            <input type=\"text\" onChange={e => setDescription(e.target.value)} />\n                        </p>\n                        <input type=\"submit\" value=\"Add Pet\" />\n                    </div>\n                    <div className=\"column\">\n                        <p>Skills (optional):</p>\n                        <p>\n                            <label>Skill 1: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillOne(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Skill 2: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillTwo(e.target.value)} />\n                        </p>\n                        <p>\n                            <label>Skill 3: </label> <br/>\n                            <input type=\"text\" onChange={e => setSkillThree(e.target.value)} />\n                        </p>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default PetForm;","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/reportWebVitals.js",[],"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/index.js",[],["43","44"],"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetList.jsx",["45","46"],"import { navigate, Link } from '@reach/router';\nimport axios from 'axios';\nimport React from 'react';\n\nconst PetList = props => {\n\n    const clickHandler = pet => {\n        navigate(`/${pet._id}`)\n        // console.log(pet)\n    }\n    const deletePet = pet => {\n        axios.delete(`http://localhost:8000/api/pets/${pet._id}`)\n            .then(res => {\n                props.removeFromDom(pet)\n            })\n    }\n\n    return (\n        <div className=\"body\">\n            <div className=\"header\">\n                <h1>Pet Shelter</h1>\n                <Link to=\"/pets/new\">add a pet to the shelter</Link>\n            </div>\n            <div className=\"content\">\n                <h2>These pets are looking for a good home</h2>\n            </div>\n            <table>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Actions</th>\n                </tr>\n                {/* {console.log(props.pets)} */}\n                {props.pets.map((pet, i) => {\n                    return <tr key={i}>\n                        <td>{pet.name}</td>\n                        <td>{pet.type}</td>\n                        <td>\n                            <Link to={`/${pet._id}`}>Details</Link> | <Link to={`/${pet._id}/edit`}>Edit</Link>\n                            {/* <button onClick={e => { deletePet(pet) }}>Delete</button> */}\n                        </td>\n                    </tr>\n                })}\n            </table>\n        </div>\n    )\n}\nexport default PetList;","/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/components/PetDisplay.jsx",["47","48","49"],"/Users/nathanbell/Documents/devLife/codingDojoGit/MERN/mernBelt/client/src/views/Main.jsx",["50","51"],"import PetForm from '../components/PetForm'\nimport PetList from '../components/PetList'\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Main = () => {\n    const [pets, setPets] = useState([]);\n    const[loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets')\n            .then(res => {\n                setPets(res.data.pet);\n                setLoaded(true);\n            })\n            .catch(err => console.log(\"Error: \", err))\n    },[])\n    const removeFromDom = petId => {\n        setPets(pets.filter(pet => pet._id != petId._id));\n    }\n    return (\n        <div className=\"App\">\n            {loaded && <PetList pets={pets} removeFromDom={removeFromDom}/>}\n        </div>\n    )\n}\n\nexport default Main;\n",{"ruleId":"52","severity":1,"message":"53","line":17,"column":5,"nodeType":"54","endLine":17,"endColumn":7,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":12,"nodeType":"58","messageId":"59","endLine":6,"endColumn":16},{"ruleId":"52","severity":1,"message":"60","line":27,"column":7,"nodeType":"54","endLine":27,"endColumn":9,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"62","line":13,"column":11,"nodeType":"58","messageId":"59","endLine":13,"endColumn":24},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"56","severity":1,"message":"67","line":7,"column":11,"nodeType":"58","messageId":"59","endLine":7,"endColumn":23},{"ruleId":"56","severity":1,"message":"68","line":11,"column":11,"nodeType":"58","messageId":"59","endLine":11,"endColumn":20},{"ruleId":"52","severity":1,"message":"60","line":33,"column":8,"nodeType":"54","endLine":33,"endColumn":10,"suggestions":"69"},{"ruleId":"56","severity":1,"message":"70","line":38,"column":11,"nodeType":"58","messageId":"59","endLine":38,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":94,"column":33,"nodeType":"73","messageId":"74","endLine":94,"endColumn":35},{"ruleId":"56","severity":1,"message":"75","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":15},{"ruleId":"71","severity":1,"message":"76","line":19,"column":44,"nodeType":"73","messageId":"74","endLine":19,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-unused-vars","'info' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["78"],"'changeHandler' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'clickHandler' is assigned a value but never used.","'deletePet' is assigned a value but never used.",["81"],"'editHandler' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PetForm' is defined but never used.","Expected '!==' and instead saw '!='.",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"86"},"Update the dependencies array to be: [socket]",{"range":"87","text":"88"},"Update the dependencies array to be: [props.id]",{"range":"89","text":"90"},{"range":"91","text":"90"},[538,540],"[socket]",[1107,1109],"[props.id]",[1302,1304]]